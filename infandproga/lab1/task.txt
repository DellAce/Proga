Робот на вход принимает координаты в формате: X, Y. Верхний левый угол имеет координату (1,1). 
Робот начинает движение с верхнего левого угла. Размеры поля, по которому может 
перемещаться робот 100x100. Входной текст для перемещения робота в координату (5,3) выглядит 
следующим образом:

	2,1
	3,1
	4,1
	5,1
	5,2
	5,3
	
Для более компактного представления кода выполнения движений роботов было решено 
разработать высокоуровневый язык, в котором можно указать куда и на сколько перемещаться. 
ормат записи программы: куда(L - влево, R - вправо, U - вверх, D - вниз), на сколько. 
Например, вышеприведенная программа будет выглядеть следующим образом:

	R,4
	D,2
	
Также высокоуровневая программа должна поддерживать операцию B (назад) - вернуть робота в 
предыдущее положение. Например для программы:

	R,4
	B
	D,2
	
Должна напечататься следующая программа на низкоуровневом языке::
	2,1
	3,1
	4,1
	5,1
	4,1
	3,1
	2,1
	1,1
	1,2
	1,3
	
Для операции назад пользователь может указать в высокоуровневой программе количество 
предыдущих положений, на которое нужно вернуться роботу. Например, для программы

	R,1
	D,1
	B,2
	D,2
	
Должна напечататься следующая программа на низкоуровневом языке::
	2,1
	2,2
	2,1
	1,1
	1,2
	1,3
	
Если для B в списке предыдущих команд имеется B, то ее игнорировать и пропускать.

Также необходимо поддерживать запретные зоны - зоны, в которые робот не может входить. 
Зоны задаются отдельным образом в следующем формате:

		X,Y,W,H
	    
где X,Y - координата левого верхнего угла зоны, W - ширина зоны, H - высота зоны.
Если путь робота пролегает через запретную зону, то необходимо сообщить об 
этой ошибке пользователю без вывода низкоуровневой программы.

Необходимо разработать приложение преобразования высокоуровневой 
программы в программу понятную для робота с проверкой возможности 
перемещения робота (выход за границы поля). В случае если перемещение невозможно, 
то необходимо сообщить об этом пользователю без вывода низкоуровневой программы.