GAS LISTING task5.S 			page 1


   1              	/*
   2              	 * task5.S ‚Äì¬†–º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ b(i) = A(k,i) + A(i,l) –±–µ–∑ movzbl
   3              	 * -------------------------------------------------------------------
   4              	 *  ‚Ä¢ 32‚Äëbit Linux, AT&T‚Äë—Å–∏–Ω—Ç–∞–∫—Å–∏—Å, —á–∏—Å—Ç—ã–µ syscalls (read / write / exit)
   5              	 *  ‚Ä¢ –û–∂–∏–¥–∞–µ—Ç —Ä–æ–≤–Ω–æ –¥–≤–µ —Ü–∏—Ñ—Ä—ã **1‚Äë5** (k –∏ l). –í—Å–µ –ø—Ä–æ—á–∏–µ —Å–∏–º–
   6              	 *    –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç, –ø–æ–∫–∞ –Ω–µ —Å–æ–±–µ—Ä—ë—Ç –æ–±–µ. –°–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫
   7              	 *  ‚Ä¢ –ü–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–µ—á–∞—Ç–∞–µ—Ç —à–µ—Å—Ç—å —á–∏—Å–µ–ª‚Äë—Å—Ç—Ä–æ–∫ –∏ –∑–∞–≤–µ—Ä—à–∞
   8              	 *  ‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π movzbl ‚Äì¬†–Ω—É–∂–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–µ–ª–∞–
   9              	 *    xor¬†reg,reg + movb mem,%r8l.
  10              	 *
  11              	 * –°–±–æ—Ä–∫–∞:
  12              	 *   as --32 -o task5.o task5.S
  13              	 *   ld -melf_i386 -o task5-exe-S task5.o
  14              	 */
  15              	
  16              	        .section .data
  17              	A:
  18 0000 01000000 	        .long 1,2,3,4,5,6
  18      02000000 
  18      03000000 
  18      04000000 
  18      05000000 
  19 0018 07000000 	        .long 7,8,9,10,11,12
  19      08000000 
  19      09000000 
  19      0A000000 
  19      0B000000 
  20 0030 0D000000 	        .long 13,14,15,16,17,18
  20      0E000000 
  20      0F000000 
  20      10000000 
  20      11000000 
  21 0048 13000000 	        .long 19,20,21,22,23,24
  21      14000000 
  21      15000000 
  21      16000000 
  21      17000000 
  22 0060 19000000 	        .long 25,26,27,28,29,30
  22      1A000000 
  22      1B000000 
  22      1C000000 
  22      1D000000 
  23 0078 1F000000 	        .long 31,32,33,34,35,36
  23      20000000 
  23      21000000 
  23      22000000 
  23      23000000 
  24              	
  25 0090 00       	k_chr:  .byte 0              # –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞ (1‚Äë5)
  26 0091 00       	l_chr:  .byte 0              # –≤—Ç–æ—Ä–∞—è —Ü–∏—Ñ—Ä–∞ (1‚Äë5)
  27 0092 00       	buf:    .space 1             # 1‚Äë–±–∞–π—Ç–æ–≤—ã–π –±—É—Ñ–µ—Ä –ø–æ–¥ read
  28 0093 00000000 	outbuf: .space 4             # ¬´72\n¬ª = 3¬†–±–∞–π—Ç–∞ + –∑–∞–ø–∞—Å
  29              	
  30              	        .section .text
  31              	        .globl _start
  32              	_start:
  33 0000 31F6     	        xor     %esi,%esi            # —Å–∫–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã—Ö —Ü–∏—Ñ—Ä –Ω–∞–±—Ä–∞–ª–∏ (0‚Ä
GAS LISTING task5.S 			page 2


  34              	
  35              	# === –ß—Ç–µ–Ω–∏–µ stdin –∏ –ø–æ–∏—Å–∫ –¥–≤—É—Ö —Ü–∏—Ñ—Ä 1‚Äë5 ===
  36              	read_loop:
  37 0002 B8030000 	        mov     $3,%eax              # sys_read
  37      00
  38 0007 31DB     	        xor     %ebx,%ebx            # fd = 0 (stdin)
  39 0009 B9920000 	        mov     $buf,%ecx
  39      00
  40 000e BA010000 	        mov     $1,%edx
  40      00
  41 0013 CD80     	        int     $0x80
  42 0015 85C0     	        test    %eax,%eax            # EOF / –æ—à–∏–±–∫–∞? ‚Äì –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –∂–¥—ë–º –¥–∞–
  43 0017 7EE9     	        jle     read_loop
  44              	
  45 0019 31C0     	        xor     %eax,%eax            # AL = 0
  46 001b A0920000 	        movb    buf,%al              # AL = —Å—á–∏—Ç–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  46      00
  47 0020 3C31     	        cmp     $'1',%al             # –º–µ–Ω—å—à–µ '1' ? ‚Äì¬†–ø—Ä–æ–ø—É—Å–∫
  48 0022 72DE     	        jb      read_loop
  49 0024 3C35     	        cmp     $'5',%al             # –±–æ–ª—å—à–µ '5' ? ‚Äì¬†–ø—Ä–æ–ø—É—Å–∫
  50 0026 77DA     	        ja      read_loop
  51 0028 2C30     	        sub     $'0',%al             # —Ç–µ–ø–µ—Ä—å AL = 1‚Äë5
  52              	
  53 002a 83FE00   	        cmp     $0,%esi              # —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞?
  54 002d 740D     	        je      store_k
  55 002f A2910000 	        movb    %al,l_chr            # –≤—Ç–æ—Ä–∞—è ‚Üí l
  55      00
  56 0034 46       	        inc     %esi
  57 0035 83FE02   	        cmp     $2,%esi
  58 0038 7CC8     	        jl      read_loop            # –µ—â—ë –Ω–µ—Ç –¥–≤—É—Ö ‚Äì¬†–∑–∞–Ω–æ–≤–æ
  59 003a EB08     	        jmp     compute
  60              	store_k:
  61 003c A2900000 	        movb    %al,k_chr            # –ø–µ—Ä–≤–∞—è ‚Üí k
  61      00
  62 0041 46       	        inc     %esi
  63 0042 EBBE     	        jmp     read_loop
  64              	
  65              	# === –í—ã—á–∏—Å–ª–µ–Ω–∏–µ b(i) –∏ –≤—ã–≤–æ–¥ ===
  66              	compute:
  67 0044 31DB     	        xor     %ebx,%ebx            # EBX = 0
  68 0046 8A1D9000 	        movb    k_chr,%bl            # EBX = k (1‚Äë5)
  68      0000
  69 004c 31D2     	        xor     %edx,%edx            # EDX = 0
  70 004e 8A159100 	        movb    l_chr,%dl            # EDX = l (1‚Äë5)
  70      0000
  71 0054 31F6     	        xor     %esi,%esi            # i = 0
  72              	
  73              	calc_loop:
  74              	        # A[k][i]
  75 0056 89D8     	        mov     %ebx,%eax            # k
  76 0058 6BC018   	        imul    $24,%eax             # k * 6 * 4  (24 –±–∞–π—Ç –≤ —Å—Ç—Ä–æ–∫–µ)
  77 005b 89F1     	        mov     %esi,%ecx            # i
  78 005d C1E102   	        shl     $2,%ecx              # i * 4
  79 0060 01C8     	        add     %ecx,%eax
  80 0062 05000000 	        add     $A,%eax
  80      00
  81 0067 8B00     	        mov     (%eax),%eax          # EAX = A[k][i]
GAS LISTING task5.S 			page 3


  82              	
  83              	        # A[i][l]
  84 0069 89F1     	        mov     %esi,%ecx
  85 006b 6BC918   	        imul    $24,%ecx             # i * 24
  86 006e 89D7     	        mov     %edx,%edi            # l
  87 0070 C1E702   	        shl     $2,%edi              # l * 4
  88 0073 01F9     	        add     %edi,%ecx
  89 0075 81C10000 	        add     $A,%ecx
  89      0000
  90 007b 8B09     	        mov     (%ecx),%ecx          # ECX = A[i][l]
  91              	
  92 007d 01C8     	        add     %ecx,%eax            # —Å—É–º–º–∞ ‚Üí EAX
  93 007f E80F0000 	        call    print_int            # –ø–µ—á–∞—Ç—å
  93      00
  94              	
  95 0084 46       	        inc     %esi                 # i++
  96 0085 83FE06   	        cmp     $6,%esi
  97 0088 7CCC     	        jl      calc_loop
  98              	
  99 008a B8010000 	        mov     $1,%eax              # sys_exit(0)
  99      00
 100 008f 31DB     	        xor     %ebx,%ebx
 101 0091 CD80     	        int     $0x80
 102              	
 103              	# === –ü–µ—á–∞—Ç—å —á–∏—Å–ª–∞ 0‚Äë72 –≤ EAX ===
 104              	# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç EAX, EBX, ECX, EDX, EDI
 105              	print_int:
 106 0093 B90A0000 	        mov     $10,%ecx             # –¥–µ–ª–∏—Ç–µ–ª—å
 106      00
 107 0098 31D2     	        xor     %edx,%edx
 108 009a F7F1     	        div     %ecx                 # EAX = –¥–µ—Å—è—Ç–∫–∏, EDX = –µ–¥–∏–Ω–∏—Ü—ã
 109              	
 110 009c BF930000 	        mov     $outbuf,%edi
 110      00
 111 00a1 83F800   	        cmp     $0,%eax
 112 00a4 7510     	        jne     two_digits
 113 00a6 80C230   	        add     $'0',%dl             # –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞
 114 00a9 8817     	        mov     %dl,(%edi)
 115 00ab C647010A 	        movb    $'\n',1(%edi)
 116 00af BA020000 	        mov     $2,%edx              # len = 2
 116      00
 117 00b4 EB13     	        jmp     write_out
 118              	
 119              	two_digits:
 120 00b6 0430     	        add     $'0',%al             # –¥–µ—Å—è—Ç–∫–∏
 121 00b8 80C230   	        add     $'0',%dl             # –µ–¥–∏–Ω–∏—Ü—ã
 122 00bb 8807     	        mov     %al,(%edi)
 123 00bd 885701   	        mov     %dl,1(%edi)
 124 00c0 C647020A 	        movb    $'\n',2(%edi)
 125 00c4 BA030000 	        mov     $3,%edx              # len = 3
 125      00
 126              	
 127              	write_out:
 128 00c9 B8040000 	        mov     $4,%eax              # sys_write
 128      00
 129 00ce BB010000 	        mov     $1,%ebx              # fd = 1 (stdout)
 129      00
GAS LISTING task5.S 			page 4


 130 00d3 B9930000 	        mov     $outbuf,%ecx
 130      00
 131 00d8 CD80     	        int     $0x80
 132 00da C3       	        ret
GAS LISTING task5.S 			page 5


DEFINED SYMBOLS
             task5.S:17     .data:00000000 A
             task5.S:25     .data:00000090 k_chr
             task5.S:26     .data:00000091 l_chr
             task5.S:27     .data:00000092 buf
             task5.S:28     .data:00000093 outbuf
             task5.S:32     .text:00000000 _start
             task5.S:36     .text:00000002 read_loop
             task5.S:60     .text:0000003c store_k
             task5.S:66     .text:00000044 compute
             task5.S:73     .text:00000056 calc_loop
             task5.S:105    .text:00000093 print_int
             task5.S:119    .text:000000b6 two_digits
             task5.S:127    .text:000000c9 write_out

NO UNDEFINED SYMBOLS
