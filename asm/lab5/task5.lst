GAS LISTING task5.S 			page 1


   1              	
   2              	#  as -ahlsm=task5.lst --32 -gstabs+ -o task5.o task5.S
   3              	#  ld -melf_i386 -o task5-exe-S task5.o
   4              	.include "my-macro"
   1              	
   2              	.macro  Finish
   3              	        movl  $1, %eax
   4              	        xorl  %ebx, %ebx
   5              	        int   $0x80
   6              	.endm
   7              	
   8              	.macro Puts string
   9              	.data
  10              	    str\@:     .ascii "\string\n"  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –
  11              	
  12              	    strlen\@ =     . - str\@           # –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–
  13              	
  14              	.text
  15              	    movl $4, %eax        # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  16              	    movl $1, %ebx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤
  17              	    movl $str\@, %ecx    # –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏
  18              	    movl $strlen\@, %edx     # –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è –≤—ã–≤–
  19              	    int $0x80        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  20              	.endm
   5              	.bss
   6              	    .lcomm buf, 1       # –±—É—Ñ–µ—Ä –¥–ª—è –æ–¥–Ω–æ–≥–æ –±–∞–π—Ç–∞
   7              	    .lcomm outbuf, 4    # –±—É—Ñ–µ—Ä –¥–ª—è –≤—ã–≤–æ–¥–∞ —á–∏—Å–ª–∞
   8              	
   9              	.section .data
  10              	A:
  11 0000 01000000 	        .long 1,2,3,4,5,6
  11      02000000 
  11      03000000 
  11      04000000 
  11      05000000 
  12 0018 07000000 	        .long 7,8,9,10,11,12
  12      08000000 
  12      09000000 
  12      0A000000 
  12      0B000000 
  13 0030 0D000000 	        .long 13,14,15,16,17,18
  13      0E000000 
  13      0F000000 
  13      10000000 
  13      11000000 
  14 0048 13000000 	        .long 19,20,21,22,23,24
  14      14000000 
  14      15000000 
  14      16000000 
  14      17000000 
  15 0060 19000000 	        .long 25,26,27,28,29,30
  15      1A000000 
  15      1B000000 
  15      1C000000 
  15      1D000000 
  16 0078 1F000000 	        .long 31,32,33,34,35,36
  16      20000000 
GAS LISTING task5.S 			page 2


  16      21000000 
  16      22000000 
  16      23000000 
  17              	
  18 0090 00       	k:  .byte 0              # –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞
  19 0091 00       	l:  .byte 0              # –≤—Ç–æ—Ä–∞—è —Ü–∏—Ñ—Ä–∞
  20              	
  21              	.section .text
  22              	.globl _start
  23              	_start:
  24 0000 31F6     	        xor %esi,%esi
  25              	
  26              	read_loop:
  27 0002 B8030000 	        mov $3,%eax              # sysread
  27      00
  28 0007 31DB     	        xor %ebx,%ebx            # stdin
  29 0009 B9000000 	        mov $buf,%ecx
  29      00
  30 000e BA010000 	        mov $1,%edx
  30      00
  31 0013 CD80     	        int $0x80
  32 0015 85C0     	        test %eax,%eax            # EOF / –æ—à–∏–±–∫–∞ –∂–¥—ë–º –¥–∞–ª—å—à–µ
  33 0017 7EE9     	        jle read_loop
  34              	
  35 0019 31C0     	        xor %eax,%eax
  36 001b A0000000 	        movb buf,%al              # al —Å—á–∏—Ç–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  36      00
  37 0020 3C31     	        cmp $'1',%al             # –º–µ–Ω—å—à–µ '1' ? = –ø—Ä–æ–ø—É—Å–∫
  38 0022 72DE     	        jb read_loop
  39 0024 3C36     	        cmp $'6',%al             # –±–æ–ª—å—à–µ '6' ? = –ø—Ä–æ–ø—É—Å–∫
  40 0026 77DA     	        ja read_loop
  41 0028 2C30     	        sub $'0',%al             # al = 1‚Äë6
  42              	
  43 002a 83FE00   	        cmp $0,%esi              # —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞?
  44 002d 740F     	        je store_k         # –¥–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ—ë
  45 002f FEC8     	        dec %al
  46 0031 A2910000 	        movb %al,l            # –≤—Ç–æ—Ä–∞—è -> l
  46      00
  47 0036 46       	        inc %esi
  48 0037 83FE02   	        cmp $2,%esi
  49 003a 7CC6     	        jl read_loop            # –µ—â—ë –Ω–µ—Ç –¥–≤—É—Ö - –∑–∞–Ω–æ–≤–æ
  50 003c EB0A     	        jmp compute
  51              	store_k:
  52 003e FEC8     	        dec %al
  53 0040 A2900000 	        movb %al,k            # –ø–µ—Ä–≤–∞—è -> k
  53      00
  54 0045 46       	        inc %esi
  55 0046 EBBA     	        jmp read_loop
  56              	
  57              	compute:
  58 0048 31F6     	        xor %esi,%esi            # i = 0
  59              	
  60              	calc_loop:
  61 004a 31DB     	        xor %ebx,%ebx
  62 004c 8A1D9000 	        movb k,%bl           # k –≤ EBX
  62      0000
  63 0052 31D2     	        xor %edx,%edx
GAS LISTING task5.S 			page 3


  64 0054 8A159100 	        movb l,%dl        # l –≤ EDX
  64      0000
  65              	
  66              	        # A[k][i]
  67 005a 89D8     	        mov %ebx,%eax            # k
  68 005c 6BC018   	        imul $24,%eax             # k * 24
  69 005f 89F1     	        mov %esi,%ecx            # i
  70 0061 6BC904   	        imul $4,%ecx              # i * 4
  71 0064 01C8     	        add %ecx,%eax
  72 0066 05000000 	        add $A,%eax
  72      00
  73 006b 8B00     	        mov (%eax),%eax          # EAX = A[k][i]
  74              	
  75              	        # A[i][l]
  76 006d 89F1     	        mov %esi,%ecx
  77 006f 6BC918   	        imul $24,%ecx             # i * 24
  78 0072 89D7     	        mov %edx,%edi            # l
  79 0074 6BFF04   	        imul $4,%edi              # l * 4
  80 0077 01F9     	        add %edi,%ecx
  81 0079 81C10000 	        add $A,%ecx
  81      0000
  82 007f 8B09     	        mov (%ecx),%ecx          # ECX = A[i][l]
  83              	
  84 0081 01C8     	        add %ecx,%eax            # —Å—É–º–º–∞
  85 0083 E80F0000 	        call print_int            # –ø–µ—á–∞—Ç—å
  85      00
  86              	
  87 0088 46       	        inc %esi                 # i++
  88 0089 83FE06   	        cmp $6,%esi
  89 008c 7CBC     	        jl calc_loop
  90              	
  91              	        Finish
  91 008e B8010000 	>  movl $1,%eax
  91      00
  91 0093 31DB     	>  xorl %ebx,%ebx
  91 0095 CD80     	>  int $0x80
  92              	
  93              	print_int:
  94 0097 B90A0000 	        mov $10,%ecx             # –¥–µ–ª–∏—Ç–µ–ª—å
  94      00
  95 009c 31D2     	        xor %edx,%edx
  96 009e F7F1     	        div %ecx                 # EAX = –¥–µ—Å—è—Ç–∫–∏, EDX = –µ–¥–∏–Ω–∏—Ü—ã
  97              	
  98 00a0 BF040000 	        mov $outbuf,%edi
  98      00
  99 00a5 83F800   	        cmp $0,%eax
 100 00a8 7510     	        jne two_digits
 101 00aa 80C230   	        add $'0',%dl             # –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞
 102 00ad 8817     	        mov %dl,(%edi)
 103 00af C647010A 	        movb $'\n',1(%edi)
 104 00b3 BA020000 	        mov $2,%edx              # len = 2
 104      00
 105 00b8 EB13     	        jmp write_out
 106              	
 107              	two_digits: # –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–≤—É—Ö —Ü–∏—Ñ—Ä
 108 00ba 0430     	        add $'0',%al             # –¥–µ—Å—è—Ç–∫–∏
 109 00bc 80C230   	        add $'0',%dl             # –µ–¥–∏–Ω–∏—Ü—ã
GAS LISTING task5.S 			page 4


 110 00bf 8807     	        mov %al,(%edi)
 111 00c1 885701   	        mov %dl,1(%edi)
 112 00c4 C647020A 	        movb $'\n',2(%edi)
 113 00c8 BA030000 	        mov $3,%edx              # len = 3
 113      00
 114              	
 115              	write_out:
 116 00cd B8040000 	        mov $4,%eax              # sys_write
 116      00
 117 00d2 BB010000 	        mov $1,%ebx              # fd = 1 (stdout)
 117      00
 118 00d7 B9040000 	        mov $outbuf,%ecx
 118      00
 119 00dc CD80     	        int $0x80
 120 00de C3       	        ret
GAS LISTING task5.S 			page 5


DEFINED SYMBOLS
                             .bss:00000000 buf
             task5.S:7      .bss:00000004 outbuf
             task5.S:10     .data:00000000 A
             task5.S:18     .data:00000090 k
             task5.S:19     .data:00000091 l
             task5.S:23     .text:00000000 _start
             task5.S:26     .text:00000002 read_loop
             task5.S:51     .text:0000003e store_k
             task5.S:57     .text:00000048 compute
             task5.S:60     .text:0000004a calc_loop
             task5.S:93     .text:00000097 print_int
             task5.S:107    .text:000000ba two_digits
             task5.S:115    .text:000000cd write_out

NO UNDEFINED SYMBOLS
