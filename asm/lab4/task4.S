/*
 * Программа ввода кодов цифровых символов в буфер в ОП
 */

.include "my-macro"

.bss
    .lcomm summ, 2
    .lcomm c, 1    # однобайтовый буфер для чтения байта из файла stdin
    .lcomm last, 1 # однобайтовый буфер для хранения последнего символа

.data
deff: .long 48
.text
.global _start

_start:
    sub    %esi, %esi     # указатель адреса байта в буфере buf (индексный регистр)

show_prompt:
    Puts "Вводите цифру, друг мой!"     # макровызов вывода строки в
                    # файл stdout (подсказка ввода)

kbd_input:
    Getchar $c          # макровызов ввода байта из stdin в
            # промежуточный буфер c
    cmpl $0, %eax     # наступило событие EOF (конец файла stdin) ? 
    je stop        # Да - на завершение программы
    cmpb $'\n', c     # это символ перевода строки ?
    je last_in_eax     # ДА - на ввод следующего символа
    cmpb $'9', c      # код больше кода символа '9' ?
    ja print_err_msg    # ДА - на вывод сообщения об ошибке
    cmpb $'0', c    # код меньше кода символа '0' ?
    jb print_err_msg    # ДА - на вывод сообщения об ошибке
    movb c, %al         # передать код символа из c в al
    movb %al, last      # сохранить последний символ



    Puts "Цифра! Хорошо." # сообщения об успехе вводе

    jmp show_prompt    # на ввод следующего символа
last_in_eax:
    xor %eax, %eax     # очищаем eax
    movb last, %al     # передать код последнего символа в al
    subb $48, %al       # преобразовать в цифру
    movzx %al, %cx      # расширить цифру до 16 бит в cx
    movw summ, %ax      # загрузить текущую сумму (2 байта)
    addw %cx, %ax       # сложить сумму и цифру
    jc print_overflow_msg
    movw %ax, summ      # сохранить обратно в summ
    jc print_overflow_msg
    jmp kbd_input

print_overflow_msg:
    Puts "Сумма превышает допустимое значение." # вывод сообщения о переполнении суммы
    jmp stop     # на завершение программы

print_err_msg:
    Puts "Не цифровая клавиша. Повторите ввод"    # вывод сообщения об ошибке
    jmp show_prompt     # на ввод следующего символа

stop:
    Exit $0

.end
