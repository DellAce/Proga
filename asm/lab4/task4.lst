GAS LISTING task4.S 			page 1


   1              	/*
   2              	 * –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤–≤–æ–¥–∞ –∫–æ–¥–æ–≤ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏
   3              	 * –æ–¥–Ω–æ—Ü–∏—Ñ—Ä–æ–≤—ã—Ö —á–∏—Å–µ–ª —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è.
   4              	 * 
   5              	 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–≤–æ–¥ –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞ (stdin).
   6              	 * –í—ã–≤–æ–¥ —Å—É–º–º—ã –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ.
   7              	 * 
   8              	 * –ê—Å—Å–µ–º–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: as -ahlsm=task4.lst --32 -gstabs+ -o task4.o task4.S
   9              	 * –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤—è–∑–µ–π:  ld -melf_i386 -o task4-exe-S task4.o
  10              	 */
  11              	
  12              	.include "my-macro"
   1              	/*
   2              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
   3              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
   4              	 *     - –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
   5              	 *
   6              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
   7              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 exit'
   8              	*/
   9              	.macro Exit ret_val
  10              	    movl $1, %eax         # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ exit
  11              	    movl \ret_val, %ebx     # –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
  12              	    int $0x80         # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  13              	.endm
  14              	
  15              	
  16              	/*
  17              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –±–∞–π—Ç–∞ –∫–æ–¥–∞ —Å
  18              	 * —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ–¥–∞
  19              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  20              	 *     - –∞–¥—Ä–µ—Å –±—É—Ñ–µ—Ä–∞ –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –±–∞–π—Ç–∞
  21              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
  22              	 *    - –≤ %eax –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–∏—Ç–∞–Ω–Ω—ã—Ö –±–∞–π—Ç–æ–≤
  23              	 *    - –ø–æ –∞–¥—Ä–µ—Å—É buf_addr - —Å—á–∏—Ç–∞–Ω–Ω—ã–π –±–∞–π—Ç
  24              	 *
  25              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  26              	 * –°–º. —Ç–∞–∫–∂–µ 'man 2 read'
  27              	*/
  28              	.macro Getchar buf_addr
  29              	    movl $3, %eax        # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ read
  30              	    movl $0, %ebx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–≤–æ
  31              	    movl \buf_addr, %ecx    # –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –±—É—Ñ–µ—Ä–∞ (–æ–Ω –∂–µ - —Ñ–∞–∫—Ç–∏—á
  32              	                     # –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞)
  33              	    movl $1, %edx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è —á—Ç–µ–Ω–∏—
  34              	    int $0x80        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  35              	.endm
  36              	
  37              	/*
  38              	 * –ú–∞–∫—Ä–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è  –≤—ã–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–∞–π–ª —Å—Ç–∞–Ω–¥–∞—Ä—Ç–
  39              	 * –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
  40              	 *     - –°—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞.
  41              	 *
  42              	 * –ü—Ä–∏–º–µ—Ç—Ä –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞:
  43              	 *    Puts "–¢–µ–∫—Å—Ç –≤—ã–≤–æ–¥–∏–º–æ–π —Å—Ç—Ä–æ–∫–∏"
  44              	 *
  45              	 * –†–µ–∑—É–ª—å—Ç–∞—Ç:
GAS LISTING task4.S 			page 2


  46              	 *    - –≤—ã–≤–æ–¥–∏—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ —Å–∏–º–≤–æ–ª—ã –∑–∞–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–
  47              	 *      –∏ –≤—Å–ª–µ–¥ –∑–∞ –Ω–∏–º–∏ —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏ \n
  48              	 *
  49              	 * –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤–∞ –∏–∑–º–µ–Ω—è—é—Ç—Å—è —Ä–µ–≥–∏—Å—Ç—Ä—ã: %e
  50              	 * –°–º. —Ç–∞–∫–∂–µ 'man puts', 'man 2 write'
  51              	*/
  52              	.macro Puts string
  53              	.data
  54              	    str\@:     .ascii "\string\n"  # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –
  55              	
  56              	    strlen\@ =     . - str\@           # –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–
  57              	
  58              	.text
  59              	    movl $4, %eax        # –Ω–æ–º–µ—Ä —Å–∏—Å—Ç. –≤—ã–∑–æ–≤–∞ write
  60              	    movl $1, %ebx        # –ø–∞—Ä–∞–º–µ—Ç—Ä 1: –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤—ã–≤
  61              	    movl $str\@, %ecx    # –ø–∞—Ä–∞–º–µ—Ç—Ä 2: –∞–¥—Ä–µ—Å –ø–∞–º—è—Ç–∏ —Å –≤—ã–≤–æ–¥–∏–º—ã–º–∏ —Å–∏
  62              	    movl $strlen\@, %edx     # –ø–∞—Ä–∞–º–µ—Ç—Ä 3: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç–æ–≤ –¥–ª—è –≤—ã–≤–
  63              	    int $0x80        # –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  64              	.endm
  65              	
  66              	.macro Finish
  67              	    movl $0, %ebx 	# first argument: exit code
  68              	    movl $1, %eax 	# sys_exit index
  69              	    int  $0x80 		# kernel interrupt
  70              	.endm
  13              	
  14              	.bss
  15              	    .lcomm summ, 2        # –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–∞—è —Å—É–º–º–∞ (word)
  16              	    .lcomm c, 1           # –æ–¥–Ω–æ–±–∞–π—Ç–æ–≤—ã–π –±—É—Ñ–µ—Ä –¥–ª—è Getchar
  17              	    .lcomm last, 1        # –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª
  18              	    .lcomm buffer, 12     # –±—É—Ñ–µ—Ä –¥–ª—è –ø–µ—á–∞—Ç–∏ —á–∏—Å–ª–∞ (–º–∞–∫—Å 11 —Ü–∏—Ñ—Ä + \0)
  19              	
  20              	.data
  21 0000 30000000 	    deff: .long 48         # –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ '0' (–¥–ª—è –º–∞–∫—Ä–æ—Å–æ–≤)
  22              	
  23              	.text
  24              	.global _start
  25              	
  26              	_start:
  27 0000 29F6     	    sub %esi, %esi       # –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ esi –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤
  28              	
  29              	show_prompt:
  30              	    Puts "–í–≤–æ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, –¥—Ä—É–≥ –º–æ–π!"     # –º–∞–∫—Ä–æ–≤—ã–∑–æ–≤ –≤—ã–≤–æ–¥–∞ —Å—Ç
  30              	> .data
  30 0004 D092D0B2 	>  str0:.ascii "–í–≤–æ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, –¥—Ä—É–≥ –º–æ–π!\n"
  30      D0BED0B4 
  30      D0B8D182 
  30      D0B520D1 
  30      86D0B8D1 
  30              	> 
  30              	>  strlen0 =. - str0
  30              	> 
  30              	> .text
  30 0002 B8040000 	>  movl $4,%eax
  30      00
  30 0007 BB010000 	>  movl $1,%ebx
  30      00
GAS LISTING task4.S 			page 3


  30 000c B9040000 	>  movl $str0,%ecx
  30      00
  30 0011 BA2C0000 	>  movl $strlen0,%edx
  30      00
  30 0016 CD80     	>  int $0x80
  31              	
  32              	kbd_input:
  33              	    Getchar $c             # –≤–≤–æ–¥ –±–∞–π—Ç–∞ -> c,   EAX == 0 –ø—Ä–∏ EOF
  33 0018 B8030000 	>  movl $3,%eax
  33      00
  33 001d BB000000 	>  movl $0,%ebx
  33      00
  33 0022 B9020000 	>  movl $c,%ecx
  33      00
  33              	>  
  33 0027 BA010000 	>  movl $1,%edx
  33      00
  33 002c CD80     	>  int $0x80
  34 002e 83F800   	    cmpl $0, %eax          # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ EOF
  35 0031 0F849100 	    je output_sum          # –µ—Å–ª–∏ EOF, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–≤–æ–¥—É —Å—É–º–º—ã
  35      0000
  36              	
  37 0037 803D0200 	    cmpb $'\n', c          # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏
  37      00000A
  38 003e 7434     	    je last_in_eax          # –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏, –≥–æ—Ç–æ–≤–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏
  39 0040 803D0200 	    cmpb $'9', c           # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–º–≤–æ–ª –±–æ–ª—å—à–µ '9'
  39      000039
  40 0047 7764     	    ja print_err_msg        # –µ—Å–ª–∏ –±–æ–ª—å—à–µ '9', –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—
  41 0049 803D0200 	    cmpb $'0', c           # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–º–≤–æ–ª –º–µ–Ω—å—à–µ '0'
  41      000030
  42 0050 725B     	    jb print_err_msg        # –µ—Å–ª–∏ –º–µ–Ω—å—à–µ '0', –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—
  43              	
  44 0052 A0020000 	    movb c, %al            # –ø–µ—Ä–µ–Ω–æ—Å –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –≤ AL
  44      00
  45 0057 A2030000 	    movb %al, last         # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–∏–º–
  45      00
  46              	
  47              	    Puts "–¶–∏—Ñ—Ä–∞! –•–æ—Ä–æ—à–æ."   # —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–≤–æ–¥–µ —Ü–∏—Ñ
  47              	> .data
  47 0030 D0A6D0B8 	>  str2:.ascii "–¶–∏—Ñ—Ä–∞! –•–æ—Ä–æ—à–æ.\n"
  47      D184D180 
  47      D0B02120 
  47      D0A5D0BE 
  47      D180D0BE 
  47              	> 
  47              	>  strlen2 =. - str2
  47              	> 
  47              	> .text
  47 005c B8040000 	>  movl $4,%eax
  47      00
  47 0061 BB010000 	>  movl $1,%ebx
  47      00
  47 0066 B9300000 	>  movl $str2,%ecx
  47      00
  47 006b BA1A0000 	>  movl $strlen2,%edx
  47      00
  47 0070 CD80     	>  int $0x80
GAS LISTING task4.S 			page 4


  48 0072 EB8E     	    jmp show_prompt        # –≤–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É
  49              	
  50              	last_in_eax:
  51 0074 31C0     	    xor %eax, %eax          # –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ eax
  52 0076 A0030000 	    movb last, %al          # –ø–µ—Ä–µ–¥–∞—á–∞ –∫–æ–¥–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ AL
  52      00
  53 007b 2C30     	    subb $48, %al           # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –≤ —Ü–∏—Ñ—Ä—É
  54              	
  55 007d 6631C9   	    xor %cx, %cx            # –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ cx
  56 0080 88C1     	    movb %al, %cl           # –ø–µ—Ä–µ–Ω–æ—Å —Ü–∏—Ñ—Ä—ã –≤ CL
  57 0082 66A10000 	    movw summ, %ax          # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—É–º–º—ã
  57      0000
  58 0088 6601C8   	    addw %cx, %ax           # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ü–∏—Ñ—Ä—ã –∫ —Å—É–º–º–µ
  59 008b 7208     	    jc print_overflow_msg   # –µ—Å–ª–∏ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ, –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
  60 008d 66A30000 	    movw %ax, summ          # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É–º–º—ã
  60      0000
  61 0093 EB83     	    jmp kbd_input           # –≤–æ–∑–≤—Ä–∞—Ç –∫ –≤–≤–æ–¥—É
  62              	
  63              	print_overflow_msg:
  64              	    Puts "–°—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ."  # —Å–æ–æ–±—â–µ–Ω–∏
  64              	> .data
  64 004a D0A1D183 	>  str3:.ascii "–°—É–º–º–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.\n"
  64      D0BCD0BC 
  64      D0B020D0 
  64      BFD180D0 
  64      B5D0B2D1 
  64              	> 
  64              	>  strlen3 =. - str3
  64              	> 
  64              	> .text
  64 0095 B8040000 	>  movl $4,%eax
  64      00
  64 009a BB010000 	>  movl $1,%ebx
  64      00
  64 009f B94A0000 	>  movl $str3,%ecx
  64      00
  64 00a4 BA450000 	>  movl $strlen3,%edx
  64      00
  64 00a9 CD80     	>  int $0x80
  65 00ab EB7C     	    jmp stop
  66              	
  67              	print_err_msg:
  68              	    Puts "–ù–µ —Ü–∏—Ñ—Ä–æ–≤–∞—è –∫–ª–∞–≤–∏—à–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥"  # —Å–æ–æ–±—â–µ–Ω–∏–µ 
  68              	> .data
  68 008f D09DD0B5 	>  str4:.ascii "–ù–µ —Ü–∏—Ñ—Ä–æ–≤–∞—è –∫–ª–∞–≤–∏—à–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥\n"
  68      20D186D0 
  68      B8D184D1 
  68      80D0BED0 
  68      B2D0B0D1 
  68              	> 
  68              	>  strlen4 =. - str4
  68              	> 
  68              	> .text
  68 00ad B8040000 	>  movl $4,%eax
  68      00
  68 00b2 BB010000 	>  movl $1,%ebx
  68      00
GAS LISTING task4.S 			page 5


  68 00b7 B98F0000 	>  movl $str4,%ecx
  68      00
  68 00bc BA420000 	>  movl $strlen4,%edx
  68      00
  68 00c1 CD80     	>  int $0x80
  69 00c3 E93AFFFF 	    jmp show_prompt
  69      FF
  70              	
  71              	output_sum:
  72 00c8 31C0     	    xor %eax, %eax          # –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ eax
  73 00ca 66A10000 	    movw summ, %ax          # –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –≤ AX
  73      0000
  74 00d0 31DB     	    xor %ebx, %ebx          # —Å–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
  75              	
  76              	print_digit:
  77 00d2 31D2     	    xor %edx, %edx          # —Å–±—Ä–æ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞ edx
  78 00d4 66B90A00 	    movw $10, %cx           # –¥–µ–ª–∏—Ç–µ–ª—å 10
  79 00d8 66F7F1   	    div %cx                 # –¥–µ–ª–µ–Ω–∏–µ AX –Ω–∞ 10, –æ—Å—Ç–∞—Ç–æ–∫ –≤ DX
  80 00db 80C230   	    add $48, %dl            # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ –≤ ASCII-–∫–æ–¥
  81 00de 88930800 	    movb %dl, buffer(%ebx)  # –∑–∞–ø–∏—Å—å —Ü–∏—Ñ—Ä—ã –≤ –±—É—Ñ–µ—Ä
  81      0000
  82 00e4 43       	    incl %ebx               # —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  83 00e5 6685C0   	    test %ax, %ax           # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–ª—å
  84 00e8 75E8     	    jnz print_digit         # –µ—Å–ª–∏ –Ω–µ –Ω–æ–ª—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–µ–ª–µ–Ω–∏–µ
  85              	
  86              	print_number:
  87 00ea 4B       	    decl %ebx               # –¥–µ–∫—Ä–µ–º–µ–Ω—Ç —Å—á–µ—Ç—á–∏–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤
  88 00eb 83FB00   	    cmp $0, %ebx            # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω–µ—Ü –≤—ã–≤–æ–¥–∞
  89 00ee 7C1B     	    jl finish_output
  90              	
  91 00f0 8D8B0800 	    lea buffer(%ebx), %ecx  # –ø–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Ç–µ–∫—É—â–µ–π —Ü–∏—Ñ—Ä—ã
  91      0000
  92 00f6 53       	    push %ebx               # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  93 00f7 B8040000 	    movl $4, %eax           # sys_write
  93      00
  94 00fc BB010000 	    movl $1, %ebx           # –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä stdout
  94      00
  95 0101 BA010000 	    movl $1, %edx           # –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞ 1
  95      00
  96 0106 CD80     	    int $0x80               # —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–∑–æ–≤
  97              	
  98 0108 5B       	    pop %ebx                # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
  99 0109 EBDF     	    jmp print_number        # –ø–µ—á–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–π —Ü–∏—Ñ—Ä—ã
 100              	
 101              	finish_output:
 102 010b C6050800 	    movb $'\n', buffer     # –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –≤ –±—É—Ñ–µ—Ä
 102      00000A
 103 0112 B8040000 	    movl $4, %eax
 103      00
 104 0117 BB010000 	    movl $1, %ebx
 104      00
 105 011c 8D0D0800 	    lea buffer, %ecx
 105      0000
 106 0122 BA010000 	    movl $1, %edx
 106      00
 107 0127 CD80     	    int $0x80
 108              	
GAS LISTING task4.S 			page 6


 109              	stop:
 110              	    Exit $0
 110 0129 B8010000 	>  movl $1,%eax
 110      00
 110 012e BB000000 	>  movl $0,%ebx
 110      00
 110 0133 CD80     	>  int $0x80
 111              	
 112              	.end
GAS LISTING task4.S 			page 7


DEFINED SYMBOLS
             task4.S:15     .bss:00000000 summ
             task4.S:15     .bss:00000002 c
             task4.S:16     .bss:00000003 last
             task4.S:18     .bss:00000008 buffer
             task4.S:21     .data:00000000 deff
             task4.S:26     .text:00000000 _start
             task4.S:29     .text:00000002 show_prompt
             task4.S:30     .data:00000004 str0
             task4.S:30     *ABS*:0000002c strlen0
             task4.S:32     .text:00000018 kbd_input
             task4.S:71     .text:000000c8 output_sum
             task4.S:50     .text:00000074 last_in_eax
             task4.S:67     .text:000000ad print_err_msg
             task4.S:47     .data:00000030 str2
             task4.S:47     *ABS*:0000001a strlen2
             task4.S:63     .text:00000095 print_overflow_msg
             task4.S:64     .data:0000004a str3
             task4.S:64     *ABS*:00000045 strlen3
             task4.S:109    .text:00000129 stop
             task4.S:68     .data:0000008f str4
             task4.S:68     *ABS*:00000042 strlen4
             task4.S:76     .text:000000d2 print_digit
             task4.S:86     .text:000000ea print_number
             task4.S:101    .text:0000010b finish_output

NO UNDEFINED SYMBOLS
